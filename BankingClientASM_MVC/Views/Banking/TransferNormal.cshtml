@model BankingClientASM_MVC.ViewModels.TransferNormalViewModel

@{
    ViewBag.Title = "Transfer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#checkAccountBtn').click(function (e) {
                e.preventDefault();
                const accountNumber = $('input[name=ReceiverAccountNumber]').val();
                if (accountNumber != '') {
                    $.ajax({
                        url: "@Url.Action("CheckAccountTransfer", "Banking")",
                        type: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        data: {
                            accountNumber,
                        },
                    }).done(function (result) {
                        console.log(result);
                        $('#accountTransferFullName').show();
                        $('#accountTransferFullName').html(`${result.FullName}`);
                        $('#receiverAccountInputErr').hide();

                    }).fail(function (err) {
                        console.log(err);
                        $('#receiverAccountInputErr').show();
                        $('#receiverAccountInputErr').text("Account doesn't exist !!");
                        $('#accountTransferFullName').hide();
                    });
                    $('input[name=ReceiverAccountNumber]').css('border', '1px solid #d1d3e2');
                } else {
                    $('input[name=ReceiverAccountNumber]').css('border', '2px solid red');
                }
            });
        });
    </script>
}

<div class="row ">
    <div class="col-md-6 ">

        <!-- DataTales Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Transfer Normal</h6>
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReceiverAccountNumber, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.ReceiverAccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReceiverAccountNumber, "", new { @class = "text-danger" })
                                <p id="accountTransferFullName" class="text-black font-weight-bold"></p>
                                <p class="text-danger" id="receiverAccountInputErr"></p>
                                <button type="button" class="btn btn-info btn-sm" id="checkAccountBtn">Check Account</button>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountPayFees, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-12">
                                @Html.EnumDropDownListFor(model => model.AccountPayFees, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AccountPayFees, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-12">
                                <input type="submit" value="Confirm" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</div>